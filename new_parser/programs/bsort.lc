
bubble_sort_pass : ListOf(Int)s => ListOf(Int)s x Bool
  = cases
    [] => ([], true)
    [x] => ([x], true)
    l => 
      (l.first < l.second) -> cases
        true =>
          add_elem(l.second)to <- not_sorted <- bubble_sort_pass(l.first + rest)
        false =>
          add_elem(l.first)to <- bubble_sort_pass(l.second + rest) 
      where
      rest : ListOf(Int)s
        = drop(2)from(l)

      add_elem()to : Int x (ListOf(Int)s x Bool) => ListOf(Int)s x Bool
        = (elem, lb) => (elem + lb.1st, lb.2nd)

      not_sorted : ListOf(Int)s x Bool => ListOf(Int)s x Bool
        = (l, b) => (l, false)

buble_sort : ListOf(Int)s => ListOf(Int)s
  = bubble_sort_pass o> (l, is_sorted) =>
    is_sorted -> cases
      true => l
      false => buble_sort(l)

initial : ListOf(Int)s
  = compute_list(16, 65)
    where
    compute_list : Int^2 => ListOf(Int)s
      = (cases, seed)
        0 => []
        n => new_seed + compute_list(n - 1, new_seed)
          where
          new_seed : Int
            = (seed * 137 + 236 - n) -> mod <- 101

main : IO
  = print_line("Initial list = " + initial);
    print_line("Sorted list = " + buble_sort(initial))
