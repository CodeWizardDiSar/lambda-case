gcd
  : (Int, Int) => Int
  = (x, cases) =>
    0 => x
    y => gcd(y, x -> mod <- y)

read_two_ints
  : (Int x Int)FromIO
  = print <- "Please give me 2 ints" ;
    get_line ;> split_to_words o> cases =>
      [x, y] => io_wrapper(from_str(x), from_str(y))
      ... => show_err("You didnâ€™t give me 2 ints")

tuple_type NumsAndGcd
value
  (x, y, gcd) : Int x Int x Int

print_gcd_message
  : NumsAndGcd => IO
  = nums_gcd => print(message)
    where
    message
      : String
      = "The GCD of " + nums_gcd.x + " and " + nums_gcd.y + " is = " + nums_gcd.gcd

main
  : IO
  = read_two_ints ;> ints =>
    print_gcd_message(ints.1st, ints.2nd, gcd(ints.1st, ints.2nd))
