
bubble_sort_pass: ListOf(Int)s => ListOf(Int)s x Bool
  = cases
    [] => ([], true)
    [x] => ([x], true)
    l => 
      (l.first < l.second) -> cases
        true => not_sorted <- add(l.second)to_bubble(l.first)and_rest
        false => add(l.first)to_bubble(l.second)and_rest
      where
      add()to_bubble()and_rest: Int x Int => ListOf(Int)s x Bool
        = (x, y) => add(x)to <- bubble_sort_pass(y + rest)

      add()to: Int x (ListOf(Int)s x Bool) => ListOf(Int)s x Bool
        = (elem, (l, b)) => (elem + l, b)

      rest: ListOf(Int)s
        = drop(2)from(l)

      not_sorted: ListOf(Int)s x Bool => ListOf(Int)s x Bool
        = _.change{2nd = false}

buble_sort: ListOf(Int)s => ListOf(Int)s
  = bubble_sort_pass o> (l, is_sorted) =>
    is_sorted -> cases
      true => l
      false => buble_sort(l)

initial: ListOf(Int)s
  = compute_list(16, 65)
    where
    compute_list: Int^2 => ListOf(Int)s
      = (cases, seed)
        0 => []
        n =>
          new_seed + compute_list(n - 1, new_seed)
          where
          new_seed: Int
            = (seed * 137 + 236 - n) -> mod <- 101

main: IO
  = print_line("Initial list = " + initial);
    print_line("Sorted list = " + buble_sort(initial))
