Parsed :) ==>
foo
  : Int
  = 42

Parsed :) ==>
f
  : (Int, Int, Int) => Int
  = (a, b, c) =>
a + b * c

Parsed :) ==>
id_bool
  : Bool => Bool
  = cases =>
true => true
false => false

Parsed :) ==>
extended_euclidean
  : (Int, Int) => GcdAndCoeffs
  = ee_recursion(init_a_coeffs, init_b_coeffs)
where
init_a_coeffs, init_b_coeffs
  : all Coeffs
  = (1, 0), (0, 1)

