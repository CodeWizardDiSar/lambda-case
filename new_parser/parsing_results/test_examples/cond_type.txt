Parsed :) ==>
(A)And(B)Can_Be_Equal ==> (A, B) => Bool

Parsed :) ==>
(A)And(B)Add_To(C) ==> (A, B) => C

Parsed :) ==>
(A)Is(B)s_First ==> B => A

Parsed :) ==>
(T)Has_String_Repr ==> T => String

Parsed :) ==>
(E)Has_Use ==> (E(A), A => E(B)) => E(B)

