
Example:

or_type A, B :-> TypeName
values
  case0.A | case1.( int: Int, b: B) | case2.( A, B ) | case3.ListOf(A)s

Comments:

  - default value_name for the value of all cases: case_value
    Examples:

    fun1: (A, B :-> TypeName) -> A-->OrNothing
      = cases
        case0 -> value.case_value
        ... -> nothing
    fun2: (A, B :-> TypeName) -> ( A, B )-->OrNothing
      = cases
        case2 -> value.case_value
        ... -> nothing

  - anonymous tuple_types can be used for naming fields of a case
    Example:

    fun: (A, B :-> TypeName) -> Int-->OrNothing
      = cases
        case1 -> value.int
        ... -> nothing
    fun: (A, B :-> TypeName) -> B-->OrNothing
      = cases
        case1 -> value.b
        ... -> nothing

  - tuple_types can be used in a case and there is field inheritance
    Example:

    fun: (A, B :-> TypeName) -> A-->OrNothing
      = cases
        case2 -> value.pair_first
        ... -> nothing

  - is functions should be generated automatically:

    is_case0: (A, B :-> TypeName) -> Bool
    is_case1: (A, B :-> TypeName) -> Bool
    ...
