
or_type example:
- function_name: Type0 -> Type1
    = cases
      type0_case0 -> result expression of type Type1
      type0_case1 -> result expression of type Type1
      ... -> default result expression of type Type1

Comments:
- Type0 is an or_type. Here the fields of the value in each case can be used in
  the corresponding result expression. Therefore, we only match on the case.
  In "..." case we match with the keyword "value" (as in all the cases if
  needed).

tuple_type example:
- tuple_type Type2
  value ( zero_val: Type0, one_val: Type1 )

  function_name: Type2 -> Type3
    = cases
      ( type0_case0, type1_case0 ) -> result expression of type Type3
      ( type0_case0, type1_case1 ) -> result expression of type Type3
      ( type0_case1, type1_case0 ) -> result expression of type Type3
      ( type0_case1, type1_case1 ) -> result expression of type Type3
      ... -> default result expression of type Type1

Comments: 
- Type0 and Type1 are or_types. Here the fields of each Case input on both
  types can be used in the corresponding result expression.
- In the case of collision of fields (ex. Type0 == Type1) we add numbers
  beginning by 1 for the leftmost type
