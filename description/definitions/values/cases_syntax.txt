
or_type example:

  Type0 is an or_type. Here the field_names of the value each Case can be used in the
  corresponding result expression. Therefore, we only match on the Case.

  function_name: Type0 -> Type1
    = cases
      Type0Case0 -> result expression of type Type1
      Type0Case1 -> result expression of type Type1
      value_name_of_type_type0 -> default result expression of type Type1

tuple_type example:

  tuple_type Type2 value ( zero: Type0, one: Type1 )

  Type0 and Type1 are or_types. Here the field_names of each Case input on both types
  can be used in the corresponding result expression.

  function_name: Type2 -> Type3
    = cases
      ( Type0Case0, Type1Case0 ) -> result expression of type Type3
      ( Type0Case0, Type1Case1 ) -> result expression of type Type3
      ( Type0Case1, Type1Case0 ) -> result expression of type Type3
      ( Type0Case1, Type1Case1 ) -> result expression of type Type3
      value_name_of_type_type2 -> default result expression of type Type1

default result:

  to ignore the input in the default result case, instead of:

  value_name -> default result expression 

  we have:

  ... -> default result expression

