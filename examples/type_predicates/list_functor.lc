type_predicate (W)IsWrapper
function apply()internally: (A -> B, W(A)) -> W(B)

type_theorem (ListOf()s)IsAFunctor
proof
  apply()internally =
    (f, cases) ->
      non_empty;l -> (f(l.head), apply(f)internally(l.tail))==>non_empty
      empty -> empty

main: Empty==>WithIO
  = [ 1, 2, 3, 4 ]==>apply(is_odd)internally==>print
