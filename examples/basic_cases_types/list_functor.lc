
apply(f)to_each: (A -> B) -> ListOf(A)s -> ListOf(B)s
  = cases
    NonEmpty -> NonEmpty ( head-->f, tail-->apply(f)to_each )
    Empty -> Empty

type_predicate T-->IsAFunctor function applied_internally_to: (A -> B) -> T<--A -> T<--B

type_theorem ListOf()s-->IsAFunctor proof applied_internally_to = apply()to_each

first_print: One-->WithIOEffects
  [ 1, 2, 3, 4 ]-->apply(is_odd)to_each-->print

second_print: One-->WithIOEffects
  is_odd-->applied_internally_to<--[ 1, 2, 3, 4 ]-->print

main: One-->WithIOEffects
  first_print ;> second_print

