type ListOf(A)s
values
  HeadAndTail A ListOf(A)s
  EmptyList

type_predicate (T)IsAFunctor
functions
  functor_map : (A -> B) -> T A -> T B

type_proposition (ListOf()s)IsAFunctor
proof
  functor_map = for_each

(A -> B) -> ListOf(A)s -> ListOf(B)s
for_each = f -> case
  HeadAndTail h t -> HeadAndTail (f h) (for_each f t)
  EmptyList -> EmptyList
