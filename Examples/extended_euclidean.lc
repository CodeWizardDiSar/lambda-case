tuple_type GcdAndCoefficients 
value
  GAC <~ gcd:Int, a:Int, b:Int

tuple_type PreviousCoefficients 
value
  PC <~ prev:Int, prev_prev:Int

init_as, init_bs: PreviousCoefficients, PreviousCoefficients
  = (PC <~ 0, 1), (PC <~ 1, 0)

Int -> Int -> GcdAndCoefficients
extended_gcd = extended_gcd_help <~ init_as <~ init_bs 

PreviousCoefficients -> PreviousCoefficients -> Int -> Int -> GcdAndCoefficients
extended_gcd_help = as -> bs -> x -> case
  0 -> GAC <~ x, (get_prev_prev <~ as), (get_prev_prev <~ bs)
  y -> 
    compute_new: PreviousCoefficients -> PreviousCoefficients
      = old ->
      prev, prev_prev, current: Int, Int, Int
        = (get_prev <~ old), (get_prev_prev <~ old), (prev_prev - (x ~> div <~ y) * prev)
      output
        = PC <~ current, prev
    output
      = extended_gcd_help <~ (compute_new as) <~ (compute_new <~ bs) <~ y <~ (x ~> mod <~ y)
