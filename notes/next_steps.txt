fix 
- parenthesis in one argument applications: type_inference
- case/use_fields at the end of one argument applications
- stack of types in value map for multituple-level definitions
- let-output -> where

or_type
- generator
  - generate the constructors
  - "is_..." autogenerated functions
  - "value" default tuple_type value

literals
- reals
- strings

cases
- full pattern matching

tuple_type
- update_field autogenerated functions

regular parenthesis function application
- parser for already existing type?

operators 
- type class maybe? 

parentheses in the middle 
- function definition
- type definition
- function application

better error 
- transform the state with EitherT (or ExceptT)
- find error calls that are errors for the user and modify them appropriately
- add line/column numbers

wrong examples for testing error messages
