scope:
- remove head when leaving scope: where?

type abstractions:
- parenthesis at the end (mathematical notation)
- parenthesis in the middle

fix:
- cases at the end of one argument applications:
  optionMaybe or change the last type??
- let-output -> where:
  - problem with values in and outside of function
  - add intentation levels in parsing
- no "try" for better error messages

cases:
- "value" default for the value of each case that has a value:
  - use "...C value@(...)" in tuple_type cases
  - use "...C value" in or_type cases
  - use "...C" no value cases
- check cases for or_type

literals:
- reals: I think I have it bookmarked in the browser somewhere

autogenerated functions:
- update_field: TupleType, FieldType *-> TupleType
  put in map + generate definition
- is_case: OrType -> Bool
  put in map + generate definition

operators:
- parse operators with 1 input
- o>, <o 
- type class maybe? 

parentheses in the middle:
- function definition
- function application

better error:
- add line/column numbers

type predicates
type theorems
my default show
comments
undefined

testing:
- more right examples
- wrong examples 
