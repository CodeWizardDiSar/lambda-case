parentheses in the middle:
- function definition
- function application

fix:
- cases at the end of one argument applications:
  optionMaybe or change the last type??
- let-output -> where:
  - problem with values in and outside of function
  - add intentation levels in parsing
- seperate TypeName and TypeApp

cases:
- cases as an abstration in multiple abstractions
  - if multiple abstractions are "cases" we do cases on the tuple composed by all
    of them

literals:
- reals: I think I have it bookmarked in the browser somewhere
- lists:
  - need polymorphic lists and therefore type variables
  - could hard code list of literals for now?

autogenerated functions:
- update_field: (TupleType, FieldType) -> TupleType
  put in map + generate definition
- is_case: OrType -> Bool
  put in map + generate definition

better error:
- add line/column numbers

comments

operators:
- parse operators with 0 or 1 input
- o>, <o 

type variables:
- parenthesis at the end (mathematical notation)
- parenthesis in the middle

type predicates
type theorems
my default show
undefined
