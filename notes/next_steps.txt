- seperate TypeName and TypeApp

- get_1st + get_all_but_1st need type_predicates to work for any length of tuple

cases:
- cases as an abstration in multiple abstractions
  - if multiple abstractions are "cases" we do cases on the tuple composed by all
    of them

literals:
- reals: I think I have it bookmarked in the browser somewhere
- lists:
  - need polymorphic lists and therefore type variables
  - could hard code list of literals for now?

autogenerated functions:
- set_field: (TupleType, FieldType) -> TupleType
  put in map + generate definition
- is_case: OrType -> Bool
  put in map + generate definition

comments

change the parsers with my_chain_l
