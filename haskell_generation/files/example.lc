
ee_recursion: (Int x Int, Int x Int, Int, Int) -> Int x Int x Int
  = (a_coeffs, b_coeffs, x) -> cases
    0 -> (x, a_coeffs==>first, b_coeffs==>first)
    y ->
      let
      next: Int x Int -> Int x Int
        = use_fields -> (pair_second, pair_first - x==>div<==y * pair_second)
      output
      (next<==a_coeffs, next<==b_coeffs, y, x==>mod<==y)==>ee_recursion
