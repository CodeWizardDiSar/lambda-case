
- Z, R, C for number types

--------------------------------------------------------------later

- spaces
  - ?
    - field change <- I vote no
    - params arrow <- I vote no
    - case arrow <- I vote no
    - end case arrow <- I vote no
    - value def
      - after : <- I vote no
      - after = <- I vote no
    - grouped value defs
      - after : <- I vote no
      - after = <- I vote no

    - func type <- I vote no 
    - power type: add possibility for spaces around '^' 
    - condition <- I vote no
    - or type def around '|'
    - type nickname <- I vote no
    - atom prop def: around ':' <- I vote no
    - type theorem <- I vote no

- good page changes in description pdf

- leave empty params for when not used?  

- problem with func comp ops and "o" > or < ? grammar ambiguity?

- turn all args in paren func app into a tuple
  - try to typecheck with the whole tuple as the first arg
  - if it fails typecheck with the first field of the tuple as the first arg

- better parser errors (with less try)?
  - it fails on the last it tried
    - how to mitigate that?

- group type nicknames with "all"

- printing tuples (json style or similar)

- comments
  - line: #
    - can also close in the same line with second #
  - multiline: ## and close with second ##

- define arrays with power?
  - maybe good for one dimension +
    better with square brackets and commas (or x?) for multidimensional

- add element index mechanism?
  - like arrays in most languages with a[i]?
  - op like in haskell?
  - something with .change? (i, j) = ...?

- isolate hs gen (am I even gonna bother to look at the old code?)

- fix md files in github
